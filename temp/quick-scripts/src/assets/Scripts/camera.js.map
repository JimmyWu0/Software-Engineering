{"version":3,"sources":["assets\\Scripts\\camera.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["// Learn TypeScript:\r\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/typescript.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/manual/en/scripting/typescript.html\r\n// Learn Attribute:\r\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/manual/en/scripting/reference/attributes.html\r\n// Learn life-cycle callbacks:\r\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/manual/en/scripting/life-cycle-callbacks.html\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n// @ccclass\r\n// export default class camera extends cc.Component {\r\n\r\n//     @property(cc.Node)\r\n//     player: cc.Node = null;\r\n\r\n//     @property(cc.Vec2)\r\n//     offset: cc.Vec2 = cc.Vec2.ZERO;\r\n\r\n//     @property(cc.Rect)\r\n//     boundary: cc.Rect = new cc.Rect(0, 0, 1000, 1000); // 設置邊界\r\n\r\n//     @property\r\n//     orthoHeight: number = 500; // 設置正交相機的高度\r\n\r\n//     private camera: cc.Camera = null;\r\n\r\n//     onLoad() {\r\n//         this.camera = this.getComponent(cc.Camera);\r\n//         if (this.camera) {\r\n//             this.camera.ortho = true; // 設置相機為正交相機\r\n//             this.camera.orthoHeight = this.orthoHeight; // 設置相機高度\r\n//         }\r\n//         this.updateCameraPosition();\r\n//     }\r\n\r\n//     update(dt: number) {\r\n//         this.updateCameraPosition();\r\n//     }\r\n\r\n//     updateCameraPosition() {\r\n//         if (this.player) {\r\n//             // 計算目標位置\r\n//             let targetPos = this.player.position.add(cc.v2(this.offset.x, this.offset.y));\r\n\r\n//             // 邊界檢查\r\n//             targetPos.x = cc.misc.clampf(targetPos.x, this.boundary.xMin, this.boundary.xMax);\r\n//             targetPos.y = cc.misc.clampf(targetPos.y, this.boundary.yMin, this.boundary.yMax);\r\n\r\n//             // 更新相機位置\r\n//             this.node.position = targetPos;\r\n//         }\r\n//     }\r\n// }\r\n\r\n\r\n@ccclass\r\nexport default class camera extends cc.Component {\r\n\r\n    @property(cc.Node)\r\n    followTarget: cc.Node = null;\r\n    @property(cc.Boolean)\r\n    followX: boolean = true;\r\n    @property(cc.Boolean)\r\n    followY: boolean = true;\r\n    // @property(cc.Float)\r\n    minX: number = -800;  //0\r\n    // @property(cc.Float)\r\n    minY: number = -120;\r\n    // @property(cc.Float)\r\n    maxX: number = 1200;  //400 -> 800\r\n    // @property(cc.Float)\r\n    maxY: number = 120;\r\n    // @property(cc.Float)\r\n    offsetX: number = 0;\r\n    // @property(cc.Float)\r\n    offsetY: number = 0;\r\n\r\n    // LIFE-CYCLE CALLBACKS:\r\n\r\n    onLoad() {\r\n        \r\n    }\r\n\r\n    start () {\r\n        \r\n    }\r\n\r\n    update(dt) {\r\n        // Not using convertToWorldSpaceAR + convertToNodeSpaceAR because\r\n        // they are inaccurate and causes camera jitter. :(\r\n        let cameraLocalTransform = cc.mat4();\r\n        this.node.getLocalMatrix(cameraLocalTransform);\r\n        let targetWorldTransform = cc.mat4();\r\n        this.followTarget.getWorldMatrix(targetWorldTransform);\r\n        let targetWorldTranslation = cc.v3(0, 0, 0);\r\n        targetWorldTransform.getTranslation(targetWorldTranslation);\r\n        let transformed = cc.v4(targetWorldTranslation.x, targetWorldTranslation.y, targetWorldTranslation.z).transformMat4(cameraLocalTransform);\r\n        let targetPosition = cc.v2(transformed.x, transformed.y).add(cc.v2(-cc.view.getDesignResolutionSize().width / 2, -cc.view.getDesignResolutionSize().height / 2));\r\n        targetPosition = cc.v2(\r\n            clamp(this.followX ? targetPosition.x : this.node.position.x, this.minX, this.maxX),\r\n            clamp(this.followY ? targetPosition.y : this.node.position.y, this.minY, this.maxY)\r\n        );\r\n        this.node.position = targetPosition;\r\n    }\r\n}\r\n\r\nfunction clamp(x: number, a: number, b: number) {\r\n    if (x < a) return a;\r\n    if (x > b) return b;\r\n    return x;\r\n}"]}